"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// Import utilTiempo from "../dist/index";
const index_1 = __importDefault(require("./index"));
const runTestGet = true;
const runTestGetCompareDate = true;
const runTestGetDate = true;
const runTestGetFormatDate = true;
const runTestGetMs = true;
const runTestGetTime = true;
const runTestGetNextTime = true;
if (runTestGet) {
    console.log("===============[GET]===============");
    console.log("[TEST 1] ('year') => ", index_1.default.get("year"));
    console.log("[TEST 2] ('month') => ", index_1.default.get("month"));
    console.log("[TEST 3] ('week') => ", index_1.default.get("week"));
    console.log("[TEST 4] ('day') => ", index_1.default.get("day"));
    console.log("[TEST 5] ('hour') => ", index_1.default.get("hour"));
    console.log("[TEST 6] ('minute') => ", index_1.default.get("minute"));
    console.log("[TEST 7] ('second') => ", index_1.default.get("second"));
    console.log("[TEST 8] ('millisecond') => ", index_1.default.get("millisecond"));
}
if (runTestGetCompareDate) {
    console.log("===============[GET_COMPARE_DATE]===============");
    console.log("[TEST 1] (empty) => ", index_1.default.getCompareDate());
    console.log("[TEST 2] (1000) => ", index_1.default.getCompareDate(1000));
    console.log("[TEST 3] (1000, 5000) => ", index_1.default.getCompareDate(1000, 5000));
    console.log("[TEST 4] (1000, 5000, 'long') => ", index_1.default.getCompareDate(1000, 5000, "long"));
    console.log("[TEST 5] (1000, 5000, 'short') => ", index_1.default.getCompareDate(1000, 5000, "short"));
    console.log("[TEST 6] ({timestamp1: 1000,timestamp2: 5000,format: 'long'}) => ", index_1.default.getCompareDate({
        timestamp1: 1000,
        timestamp2: 5000,
        format: "long",
    }));
    console.log("[TEST 7] ({timestamp1: 1000,timestamp2: 5000,format: 'short'}) => ", index_1.default.getCompareDate({
        timestamp1: 1000,
        timestamp2: 5000,
        format: "short",
    }));
}
if (runTestGetDate) {
    console.log("===============[GET_DATE]===============");
    console.log("[TEST 1] (empty) => ", index_1.default.getDate());
    console.log("[TEST 2] (1683299105000) => ", index_1.default.getDate(1683299105000));
    console.log("[TEST 3] (1683299105000, 'es-ES', 'Europe/Madrid') => ", index_1.default.getDate(1683299105000, "es-ES", "Europe/Madrid"));
    console.log("[TEST 4] ({timestamp: 1683299105000,local: 'es-ES',timezone: 'Europe/Madrid'}) => ", index_1.default.getDate({
        timestamp: 1683299105000,
        local: "es-ES",
        timezone: "Europe/Madrid",
    }));
}
if (runTestGetFormatDate) {
    console.log("===============[GET_FORMAT_DATE]===============");
    console.log("[TEST 1]", index_1.default.getFormatDate());
    console.log("[TEST 2] (1683299105000)", index_1.default.getFormatDate(1683299105000));
    console.log("[TEST 3] (1683299105000, '{DD}/{MM}/{YYYY} {hh}:{mm}:{ss} {apm}', 'es-ES', 'Europe/Madrid', true) => ", index_1.default.getFormatDate(1683299105000, "{DD}/{MM}/{YYYY} {hh}:{mm}:{ss} {apm}", "es-ES", "Europe/Madrid", true));
    console.log("[TEST 4] (1683299105000, '{DD}/{MM}/{YYYY} {hh}:{mm}:{ss} {apm}', 'es-ES', 'Europe/Madrid', false) => ", index_1.default.getFormatDate(1683299105000, "{DD}/{MM}/{YYYY} {hh}:{mm}:{ss} {apm}", "es-ES", "Europe/Madrid", false));
    console.log("[TEST 5] ({timestamp: 1683299105000, format: '{DD}/{MM}/{YYYY} {hh}:{mm}:{ss} {apm}', local: 'es-ES', timezone: 'Europe/Madrid', hour12: true}) => ", index_1.default.getFormatDate({
        timestamp: 1683299105000,
        format: "{DD}/{MM}/{YYYY} {hh}:{mm}:{ss} {apm}",
        local: "es-ES",
        timezone: "Europe/Madrid",
        hour12: true,
    }));
    console.log("[TEST 6] ({timestamp: 1683299105000, format: '{DD}/{MM}/{YYYY} {hh}:{mm}:{ss} {apm}', local: 'es-ES', timezone: 'Europe/Madrid', hour12: false}) => ", index_1.default.getFormatDate({
        timestamp: 1683299105000,
        format: "{DD}/{MM}/{YYYY} {hh}:{mm}:{ss} {apm}",
        local: "es-ES",
        timezone: "Europe/Madrid",
        hour12: false,
    }));
}
if (runTestGetMs) {
    console.log("===============[GET_MS]===============");
    console.log("[TEST 1] ('1year') => ", index_1.default.getMs("1year"));
    console.log("[TEST 2] ('1month') => ", index_1.default.getMs("1month"));
    console.log("[TEST 3] ('1week') => ", index_1.default.getMs("1week"));
    console.log("[TEST 4] ('1day') => ", index_1.default.getMs("1day"));
    console.log("[TEST 5] ('1hour') => ", index_1.default.getMs("1hour"));
    console.log("[TEST 6] ('1minute') => ", index_1.default.getMs("1minute"));
    console.log("[TEST 7] ('1second') => ", index_1.default.getMs("1second"));
    console.log("[TEST 8] ('1millisecond') => ", index_1.default.getMs("1millisecond"));
}
if (runTestGetTime) {
    console.log("===============[GET_TIME]===============");
    console.log("[TEST 1] (empty) => ", index_1.default.getTime());
    console.log("[TEST 2] (1683299105000) => ", index_1.default.getTime(1683299105000));
    console.log("[TEST 3] (1683299105000, 'es-ES', 'Europe/Madrid', true) => ", index_1.default.getTime(1683299105000, "es-ES", "Europe/Madrid", true));
    console.log("[TEST 4] (1683299105000, 'es-ES', 'Europe/Madrid', false) => ", index_1.default.getTime(1683299105000, "es-ES", "Europe/Madrid", false));
    console.log("[TEST 5] ({timestamp: 1683299105000,local: 'es-ES',timezone: 'Europe/Madrid', hour12: true}) => ", index_1.default.getTime({
        timestamp: 1683299105000,
        local: "es-ES",
        timezone: "Europe/Madrid",
        hour12: true,
    }));
    console.log("[TEST 6] ({timestamp: 1683299105000,local: 'es-ES',timezone: 'Europe/Madrid', hour12: false}) => ", index_1.default.getTime({
        timestamp: 1683299105000,
        local: "es-ES",
        timezone: "Europe/Madrid",
        hour12: false,
    }));
}
if (runTestGetNextTime) {
    console.log("===============[GET_NEXT_TIME]===============");
    console.log("[TEST 1] ('10:00:00') => ", index_1.default.getNextTime("10:00:00"));
    console.log("[TEST 2] ('10:00:00', 'Europe/Madrid') => ", index_1.default.getNextTime("10:00:00", "Europe/Madrid"));
    console.log("[TEST 3] ({time: '10:00:00', timezone: 'Europe/Madrid'}) => ", index_1.default.getNextTime({
        time: "10:00:00",
        timezone: "Europe/Madrid",
    }));
}
